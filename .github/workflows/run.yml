name: E2E Tests

permissions: {}

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  chainsaw:
    strategy:
      fail-fast: false
      matrix:
        k8s-version:
          - name: v1.25
            version: v1.25.16
          - name: v1.26
            version: v1.26.14
          - name: v1.27
            version: v1.27.11
          - name: v1.28
            version: v1.28.7
          - name: v1.29
            version: v1.29.2
        tests:
          - ^pod-security$
    runs-on: ubuntu-latest
    name: ${{ matrix.k8s-version.name }} - ${{ matrix.tests }}
    steps:
      - name: Checkout
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: ~1.21.1
      - name: Install Tools
        run: |
          set -e
          curl -LO "https://dl.k8s.io/release/${{ matrix.k8s-version.version }}/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Install kind
        shell: bash
        run: |
          set -e
          # For AMD64 / x86_64
          [ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          # For ARM64
          [ $(uname -m) = aarch64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-arm64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
      - name: Install oras CLI
        uses: oras-project/setup-oras@ee7dbe1144cb00080a89497f937dae78f85fce29 # v1.1.0
      - name: Install latest Kyverno CLI
        uses: kyverno/action-install-cli@fcee92fca5c883169ef9927acf543e0b5fc58289 # v0.2.0
      - name: Create kind cluster
        run: |
          set -e
          kind create cluster --image kindest/node:${{ matrix.k8s-version.version }} --config ./.github/kind.yml
      - name: Install kyverno v1.10
        run: |
          set -e
          kubectl create -f https://github.com/kyverno/kyverno/releases/download/v1.10.0/install.yaml
      - name: Wait for kyverno ready
        run: |
          set -e
          kubectl wait --namespace kyverno --for=condition=ready pod --selector '!job-name' --timeout=60s
      - name: Install CRDs
        run: |
          set -e
          kubectl apply -f ./.chainsaw/crds
      - name: Install Chainsaw
        uses: kyverno/action-install-chainsaw@995cddaee7702e849270b84fa44cdcebe7462da8 # v0.1.9
      - name: Test with Chainsaw
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          chainsaw test --config .chainsaw.yaml --include-test-regex '^chainsaw$/${{ matrix.tests }}' --no-color=false
      - name: Uninstall kyverno v1.10
        run: |
          set -e
          kubectl delete -f https://github.com/kyverno/kyverno/releases/download/v1.10.0/install.yaml
      - name: Wait for kyverno 
        run: |
          set -e
          sleep 30
      - name: Install kyverno v1.11
        run: |
          set -e
          kubectl create -f https://github.com/kyverno/kyverno/releases/download/v1.11.0/install.yaml
      - name: Wait for kyverno ready
        run: |
          set -e
          kubectl wait --namespace kyverno --for=condition=ready pod --selector '!job-name' --timeout=60s
      - name: Install CRDs
        run: |
          set -e
          kubectl apply -f ./.chainsaw/crds
      - name: Install Chainsaw
        uses: kyverno/action-install-chainsaw@995cddaee7702e849270b84fa44cdcebe7462da8 # v0.1.9
      - name: Test with Chainsaw
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          chainsaw test --config .chainsaw.yaml --include-test-regex '^chainsaw$/${{ matrix.tests }}' --no-color=false
      - name: Uninstall kyverno v1.10
        run: |
          set -e
          kubectl delete -f https://github.com/kyverno/kyverno/releases/download/v1.11.0/install.yaml
      - name: Wait for kyverno 
        run: |
          set -e
          sleep 30
      - name: Install N4K v1.10
        run: |
          helm repo add nirmata https://nirmata.github.io/kyverno-charts/
          helm repo update
          helm install kyverno nirmata/kyverno \
            --version=v3.0.29 \
            --namespace kyverno \
            --create-namespace 
            # --set admissionController.replicas=1 \
            # --set cleanupController.enabled=false \
            # --set reportsController.enabled=false \
            # --set backgroundController.enabled=false \
            # --set crds.backgroundscanreports=false \
            # --set crds.clusterbackgroundscanreports=false \
            # --set crds.clusterpolicyreports=false \
            # --set crds.policyreports=false \
            # --set crds.cleanuppolicies=false
          sleep 15
          kypods=$(kubectl get pods -n kyverno -o jsonpath='{.items[*].metadata.name}')
          for pd in ${kypods}; do
            kubectl wait --for=condition=ready pod/$pd -n kyverno --timeout=300s
          done
          kubectl get pods -A
      - name: Install CRDs
        run: |
          set -e
          kubectl apply -f ./.chainsaw/crds
      - name: Install Chainsaw
        uses: kyverno/action-install-chainsaw@995cddaee7702e849270b84fa44cdcebe7462da8 # v0.1.9
      - name: Test with Chainsaw
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          chainsaw test --config .chainsaw.yaml --include-test-regex '^chainsaw$/${{ matrix.tests }}' --no-color=false
      - name: Install N4K v1.11
        run: |
          helm repo add nirmata https://nirmata.github.io/kyverno-charts/
          helm repo update
          helm uninstall kyverno --namespace kyverno
          sleep 30
          helm upgrade --install kyverno nirmata/kyverno \
            --version=v3.1.17 \
            --namespace kyverno \
            --create-namespace 
            # --set admissionController.replicas=1 \
            # --set cleanupController.enabled=false \
            # --set reportsController.enabled=false \
            # --set backgroundController.enabled=false \
            # --set crds.backgroundscanreports=false \
            # --set crds.clusterbackgroundscanreports=false \
            # --set crds.clusterpolicyreports=false \
            # --set crds.policyreports=false \
            # --set crds.cleanuppolicies=false
          sleep 15
          kypods=$(kubectl get pods -n kyverno -o jsonpath='{.items[*].metadata.name}')
          for pd in ${kypods}; do
            kubectl wait --for=condition=ready pod/$pd -n kyverno --timeout=300s
          done
          kubectl get pods -A
      - name: Install CRDs
        run: |
          set -e
          kubectl apply -f ./.chainsaw/crds
      - name: Install Chainsaw
        uses: kyverno/action-install-chainsaw@995cddaee7702e849270b84fa44cdcebe7462da8 # v0.1.9
      - name: Test with Chainsaw
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          chainsaw test --config .chainsaw.yaml --include-test-regex '^chainsaw$/${{ matrix.tests }}' --no-color=false
